// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-outside-of-docker
{
	"name": "Container Engine on the Host",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/base:bullseye",
	"features": {
		"ghcr.io/devcontainers/features/node:1": {
			"nodeGypDependencies": true,
			"version": "lts",
			"nvmVersion": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/typescript:2": {
			"version": "latest"
		},
		"ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers-contrib/features/apt-get-packages:1": {
			"packages": "telnet,iputils-ping,dnsutils,dnsmasq"
		}
	},
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},
	"mounts": [
		"type=bind,source=${localEnv:HOME}/.ssh,target=/root/.ssh,readonly"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		3000
	],
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "npm install -g @loopback/cli && npm install && echo \"set nocompatible\" >> ~/.vimrc && echo \"address=/.easypanel.host/192.168.1.121\" | sudo tee -a /etc/dnsmasq.conf && sudo service dnsmasq restart && echo \"nameserver 127.0.0.1\" | sudo tee /etc/resolv.conf > /dev/null"
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	//"remoteUser": "root"
}
